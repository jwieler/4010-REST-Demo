[{"/mnt/c/Users/jacob/Documents/Uni/F20/Cloud/Assignments/Ass4/rest-demo/4010-REST-Demo/src/App.js":"1","/mnt/c/Users/jacob/Documents/Uni/F20/Cloud/Assignments/Ass4/rest-demo/4010-REST-Demo/src/reportWebVitals.js":"2","/mnt/c/Users/jacob/Documents/Uni/F20/Cloud/Assignments/Ass4/rest-demo/4010-REST-Demo/src/index.js":"3"},{"size":4856,"mtime":1606682219223,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1606675259149,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1606675259139,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1junyjq",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/mnt/c/Users/jacob/Documents/Uni/F20/Cloud/Assignments/Ass4/rest-demo/4010-REST-Demo/src/App.js",["15","16","17"],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { TextField, makeStyles, Button, CircularProgress, Card, CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        ...theme.typography.subtitle1,\n        fontSize: '24pt',\n    },\n    jsonArea: {\n        overflow: 'scroll',\n        padding: '10px',\n        resize: 'none',\n        width: '100%',\n        backgroundColor: 'transparent',\n        border: 'none',\n        disabled: 'true',\n        height: '500px',\n        outline: 'none',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 'auto',\n        height: '500px',\n    },\n    query: {\n        display: 'block',\n        font: 'inherit',\n        fontSize: '1rem',\n    },\n    queryCont: {\n        display: 'flex',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n        width: 'fit-content',\n        margin: 'auto',\n        padding: '10px',\n    },\n    body: {\n        width: '90%',\n        margin: '32px auto',\n    },\n    root: {\n        minWidth: 275,\n        minHeight: 275,\n        width: '100%',\n        maxHeight: 500,\n        height: 500,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '10px',\n    },\n    jsonCont: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: 275,\n        height: 'fit-content',\n        maxHeight: 500,\n    },\n    profile: {\n        display: 'flex',\n        minHeight: 270,\n        width: '100%',\n        height: 'fit-content',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    const [response, setResponse] = React.useState(false);\n    const [waiting, setWaiting] = React.useState(false);\n    const [init, setInit] = React.useState(true);\n\n    const sendQuery = () => {\n        let query = document.getElementById('queryText').value;\n        if (query.length === 0) {\n            return;\n        }\n        let sampleReq = new XMLHttpRequest();\n        let responseJSON = '';\n        let baseUrl = 'https://4u1ljf1age.execute-api.us-east-1.amazonaws.com/prod1/test';\n        let url = baseUrl + query;\n\n        sampleReq.open('GET', url, true);\n        sampleReq.onload = function () {\n            responseJSON = JSON.parse(this.response);\n            responseJSON = JSON.stringify(responseJSON, undefined, 4);\n            setResponse(responseJSON);\n            setWaiting(false);\n        };\n        sampleReq.onreadystatechange = () => {\n            if (sampleReq.readyState === 4) {\n                //if complete\n                if (sampleReq.status === 200) {\n                    //check if \"OK\" (200)\n                    //success\n                }\n            }\n        };\n        setWaiting(true);\n        setResponse(false);\n        sampleReq.send();\n    };\n\n    const keyDownHandler = (e) => {\n        if (e.keyCode === 13) {\n            sendQuery();\n        }\n    };\n\n    let test = '';\n    let test2 = '';\n    var profile;\n    if (response) {\n        let responseJSON = JSON.parse(response);\n        test = response;\n\n        test2 = <textarea id='jsonText' label='Result' className={classes.jsonArea} value={test}></textarea>;\n\n        profile = (\n            <div>\n                <p>Name: {responseJSON.value}</p>\n                <p>ID: {responseJSON.testID}</p>\n                <p>Likes: {responseJSON.likes}</p>\n                <p>Dislikes: {responseJSON.dislikes}</p>\n                <img src={responseJSON.image} alt='profile' />\n            </div>\n        );\n    }\n\n    let wait = '';\n    if (waiting) {\n        wait = <CircularProgress />;\n        profile = wait;\n    }\n\n    return (\n        <div className={classes.body}>\n            <div className={classes.queryCont}>\n                <p className={classes.query}>https://4u1ljf1age.execute-api.us-east-1.amazonaws.com/prod1/test</p>\n                <TextField onKeyDown={keyDownHandler} id='queryText' label='sampleEndpoint' variant='standard' defaultValue='?testing=1'></TextField>\n                <Button color='primary' onClick={sendQuery} style={{ marginLeft: '10px' }} variant='contained'>\n                    Submit\n                </Button>\n            </div>\n            <div className={classes.jsonCont}>\n                <Card className={classes.root}>\n                    <CardContent className={classes.root}>\n                        {test2}\n                        {wait}\n                    </CardContent>\n                </Card>\n            </div>\n            <div>\n                <Card className={classes.profile}>\n                    <CardContent>{profile}</CardContent>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","/mnt/c/Users/jacob/Documents/Uni/F20/Cloud/Assignments/Ass4/rest-demo/4010-REST-Demo/src/reportWebVitals.js",[],"/mnt/c/Users/jacob/Documents/Uni/F20/Cloud/Assignments/Ass4/rest-demo/4010-REST-Demo/src/index.js",[],{"ruleId":"18","severity":1,"message":"19","line":1,"column":8,"nodeType":"20","messageId":"21","endLine":1,"endColumn":12},{"ruleId":"18","severity":1,"message":"22","line":80,"column":12,"nodeType":"20","messageId":"21","endLine":80,"endColumn":16},{"ruleId":"18","severity":1,"message":"23","line":80,"column":18,"nodeType":"20","messageId":"21","endLine":80,"endColumn":25},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'init' is assigned a value but never used.","'setInit' is assigned a value but never used."]