{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","title","typography","subtitle1","fontSize","jsonArea","overflow","padding","resize","width","backgroundColor","border","disabled","height","outline","container","display","alignItems","justifyContent","margin","query","font","queryCont","body","root","minWidth","minHeight","maxHeight","jsonCont","profile","App","classes","React","useState","response","setResponse","waiting","setWaiting","sendQuery","document","getElementById","value","length","sampleReq","XMLHttpRequest","responseJSON","url","open","onload","JSON","parse","this","stringify","undefined","onreadystatechange","readyState","status","send","test","test2","id","label","className","testID","likes","dislikes","src","image","alt","wait","CircularProgress","TextField","onKeyDown","e","keyCode","variant","defaultValue","Button","color","onClick","style","marginLeft","Card","CardContent","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c68b6238.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { TextField, makeStyles, Button, CircularProgress, Card, CardContent } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        ...theme.typography.subtitle1,\n        fontSize: '24pt',\n    },\n    jsonArea: {\n        overflow: 'scroll',\n        padding: '10px',\n        resize: 'none',\n        width: '100%',\n        backgroundColor: 'transparent',\n        border: 'none',\n        disabled: 'true',\n        height: '500px',\n        outline: 'none',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 'auto',\n        height: '500px',\n    },\n    query: {\n        display: 'block',\n        font: 'inherit',\n        fontSize: '1rem',\n    },\n    queryCont: {\n        display: 'flex',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n        width: 'fit-content',\n        margin: 'auto',\n        padding: '10px',\n    },\n    body: {\n        width: '90%',\n        margin: '32px auto',\n    },\n    root: {\n        minWidth: 275,\n        minHeight: 275,\n        width: '100%',\n        maxHeight: 500,\n        height: 500,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '10px',\n    },\n    jsonCont: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: 275,\n        height: 'fit-content',\n        maxHeight: 500,\n    },\n    profile: {\n        display: 'flex',\n        minHeight: 270,\n        width: '100%',\n        height: 'fit-content',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    const [response, setResponse] = React.useState(false);\n    const [waiting, setWaiting] = React.useState(false);\n    const [init, setInit] = React.useState(true);\n\n    const sendQuery = () => {\n        let query = document.getElementById('queryText').value;\n        if (query.length === 0) {\n            return;\n        }\n        let sampleReq = new XMLHttpRequest();\n        let responseJSON = '';\n        let baseUrl = 'https://4u1ljf1age.execute-api.us-east-1.amazonaws.com/prod1/test';\n        let url = baseUrl + query;\n\n        sampleReq.open('GET', url, true);\n        sampleReq.onload = function () {\n            responseJSON = JSON.parse(this.response);\n            responseJSON = JSON.stringify(responseJSON, undefined, 4);\n            setResponse(responseJSON);\n            setWaiting(false);\n        };\n        sampleReq.onreadystatechange = () => {\n            if (sampleReq.readyState === 4) {\n                //if complete\n                if (sampleReq.status === 200) {\n                    //check if \"OK\" (200)\n                    //success\n                }\n            }\n        };\n        setWaiting(true);\n        setResponse(false);\n        sampleReq.send();\n    };\n\n    const keyDownHandler = (e) => {\n        if (e.keyCode === 13) {\n            sendQuery();\n        }\n    };\n\n    let test = '';\n    let test2 = '';\n    var profile;\n    if (response) {\n        let responseJSON = JSON.parse(response);\n        test = response;\n\n        test2 = <textarea id='jsonText' label='Result' className={classes.jsonArea} value={test}></textarea>;\n\n        profile = (\n            <div>\n                <p>Name: {responseJSON.value}</p>\n                <p>ID: {responseJSON.testID}</p>\n                <p>Likes: {responseJSON.likes}</p>\n                <p>Dislikes: {responseJSON.dislikes}</p>\n                <img src={responseJSON.image} alt='profile' />\n            </div>\n        );\n    }\n\n    let wait = '';\n    if (waiting) {\n        wait = <CircularProgress />;\n        profile = wait;\n    }\n\n    return (\n        <div className={classes.body}>\n            <div className={classes.queryCont}>\n                <p className={classes.query}>https://4u1ljf1age.execute-api.us-east-1.amazonaws.com/prod1/test</p>\n                <TextField onKeyDown={keyDownHandler} id='queryText' label='sampleEndpoint' variant='standard' defaultValue='?testing=1'></TextField>\n                <Button color='primary' onClick={sendQuery} style={{ marginLeft: '10px' }} variant='contained'>\n                    Submit\n                </Button>\n            </div>\n            <div className={classes.jsonCont}>\n                <Card className={classes.root}>\n                    <CardContent className={classes.root}>\n                        {test2}\n                        {wait}\n                    </CardContent>\n                </Card>\n            </div>\n            <div>\n                <Card className={classes.profile}>\n                    <CardContent>{profile}</CardContent>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}