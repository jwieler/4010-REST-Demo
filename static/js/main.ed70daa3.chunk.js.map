{"version":3,"sources":["logo.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","bullet","display","margin","transform","title","fontSize","pos","marginBottom","cont","HomeHeader","classes","id","className","Card","variant","CardContent","Typography","color","gutterBottom","component","href","theme","typography","subtitle1","jsonArea","overflow","padding","resize","width","backgroundColor","border","disabled","height","outline","container","alignItems","justifyContent","query","font","queryCont","body","minHeight","maxHeight","jsonCont","profile","App","React","useState","response","setResponse","waiting","setWaiting","sendQuery","document","getElementById","value","length","sampleReq","XMLHttpRequest","responseJSON","url","open","onload","JSON","parse","this","stringify","undefined","onreadystatechange","readyState","status","send","test","test2","label","testID","likes","dislikes","src","image","alt","wait","CircularProgress","TextField","onKeyDown","e","keyCode","defaultValue","Button","onClick","style","marginLeft","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ed70daa3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles, Card, CardActions, CardContent, Button, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        minWidth: 275,\r\n    },\r\n    bullet: {\r\n        display: 'inline-block',\r\n        margin: '0 2px',\r\n        transform: 'scale(0.8)',\r\n    },\r\n    title: {\r\n        fontSize: 14,\r\n    },\r\n    pos: {\r\n        marginBottom: 12,\r\n    },\r\n    cont: {},\r\n});\r\n\r\nexport function HomeHeader() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div id='ass' className={classes.cont}>\r\n            <Card className={classes.root} variant='outlined'>\r\n                <CardContent>\r\n                    <Typography variant='h3' color='textPrimary' gutterBottom>\r\n                        CIS *4010 A4 Demo Site\r\n                    </Typography>\r\n                    <Typography variant='h5' component='h2'>\r\n                        By: Jacob Wieler\r\n                    </Typography>\r\n                    <Typography className={classes.pos} color='textSecondary'></Typography>\r\n                    <Typography variant='body2' component='p'>\r\n                        Try it below!\r\n                        <br />\r\n                        <br />\r\n                    </Typography>\r\n                    <Typography variant='body2' component='p'>\r\n                        The query parameter 'testing' is the only parameter set up thus far, and it only has 3 items to view. Try switching the id and\r\n                        see the different results. (Hit submit to submit the GET request to the invoke URL).\r\n                        <br />\r\n                        <br />\r\n                        After you hit submit, the response should come back quickly, and once it has returned, you can see the raw JSON response in\r\n                        the top textarea, as well as a formatted response below incuding the media present in the object store.\r\n                    </Typography>\r\n\r\n                    <p>\r\n                        Vist the <a href='https://github.com/jwieler/4010-REST-Demo'>GitHub Repo</a>\r\n                    </p>\r\n                </CardContent>\r\n            </Card>\r\n        </div>\r\n    );\r\n}\r\n","import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport { TextField, makeStyles, Button, CircularProgress, Card, CardContent } from '@material-ui/core';\nimport { HomeHeader } from './components/Header';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        ...theme.typography.subtitle1,\n        fontSize: '24pt',\n    },\n    jsonArea: {\n        overflow: 'scroll',\n        padding: '10px',\n        resize: 'none',\n        width: '100%',\n        backgroundColor: 'transparent',\n        border: 'none',\n        disabled: 'true',\n        height: '500px',\n        outline: 'none',\n    },\n    container: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        margin: 'auto',\n        height: '500px',\n    },\n    query: {\n        display: 'block',\n        font: 'inherit',\n        fontSize: '1rem',\n    },\n    queryCont: {\n        display: 'flex',\n        alignItems: 'baseline',\n        justifyContent: 'center',\n        width: 'fit-content',\n        margin: 'auto',\n        padding: '10px',\n    },\n    body: {\n        width: '90%',\n        margin: '32px auto',\n    },\n    root: {\n        minWidth: 275,\n        minHeight: 275,\n        width: '100%',\n        maxHeight: 500,\n        height: 500,\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '10px',\n    },\n    jsonCont: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: 275,\n        height: 'fit-content',\n        maxHeight: 500,\n    },\n    profile: {\n        display: 'flex',\n        minHeight: 270,\n        width: '100%',\n        height: 'fit-content',\n        alignItems: 'center',\n        justifyContent: 'center',\n    },\n}));\n\nfunction App() {\n    const classes = useStyles();\n\n    const [response, setResponse] = React.useState(false);\n    const [waiting, setWaiting] = React.useState(false);\n    const [init, setInit] = React.useState(true);\n\n    const sendQuery = () => {\n        let query = document.getElementById('queryText').value;\n        if (query.length === 0) {\n            return;\n        }\n        let sampleReq = new XMLHttpRequest();\n        let responseJSON = '';\n        let baseUrl = 'https://4u1ljf1age.execute-api.us-east-1.amazonaws.com/prod1/test';\n        let url = baseUrl + query;\n\n        sampleReq.open('GET', url, true);\n        sampleReq.onload = function () {\n            responseJSON = JSON.parse(this.response);\n            responseJSON = JSON.stringify(responseJSON, undefined, 4);\n            setResponse(responseJSON);\n            setWaiting(false);\n        };\n        sampleReq.onreadystatechange = () => {\n            if (sampleReq.readyState === 4) {\n                //if complete\n                if (sampleReq.status === 200) {\n                    //check if \"OK\" (200)\n                    //success\n                }\n            }\n        };\n        setWaiting(true);\n        setResponse(false);\n        sampleReq.send();\n    };\n\n    const keyDownHandler = (e) => {\n        if (e.keyCode === 13) {\n            sendQuery();\n        }\n    };\n\n    let test = '';\n    let test2 = '';\n    var profile;\n    if (response) {\n        let responseJSON = JSON.parse(response);\n        test = response;\n\n        test2 = <textarea id='jsonText' label='Result' className={classes.jsonArea} value={test}></textarea>;\n\n        profile = (\n            <div>\n                <p>Name: {responseJSON.value}</p>\n                <p>ID: {responseJSON.testID}</p>\n                <p>Likes: {responseJSON.likes}</p>\n                <p>Dislikes: {responseJSON.dislikes}</p>\n                <img src={responseJSON.image} alt='profile' />\n            </div>\n        );\n    }\n\n    let wait = '';\n    if (waiting) {\n        wait = <CircularProgress />;\n        profile = wait;\n    }\n\n    return (\n        <div className={classes.body}>\n            <HomeHeader />\n            <div className={classes.queryCont}>\n                <p className={classes.query}>https://4u1ljf1age.execute-api.us-east-1.amazonaws.com/prod1/test</p>\n                <TextField onKeyDown={keyDownHandler} id='queryText' label='sampleEndpoint' variant='standard' defaultValue='?testing=1'></TextField>\n                <Button color='primary' onClick={sendQuery} style={{ marginLeft: '10px' }} variant='contained'>\n                    Submit\n                </Button>\n            </div>\n            <div className={classes.jsonCont}>\n                <Card className={classes.root}>\n                    <CardContent className={classes.root}>\n                        {test2}\n                        {wait}\n                    </CardContent>\n                </Card>\n            </div>\n            <div>\n                <Card className={classes.profile}>\n                    <CardContent>{profile}</CardContent>\n                </Card>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}